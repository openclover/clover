pluginName=OpenClover 4 Core
providerName=OpenClover.org
clover.name=Clover
clover.license=License
clover.copyright=Copyright (c) 2007 - 2017 Atlassian Pty. Ltd. \
       Copyright (c) 2017 - 2019 modifications by OpenClover.org \
       The use of this product is subject to the terms of the Apache License, Version 2.0 \
       (http://www.apache.org/licenses/LICENSE-2.0), \
       unless otherwise specified therein. \
       This product includes software developed by the \
       Apache Software Foundation (http://www.apache.org/). \
       This product also includes libraries, which are covered by the GNU LGPL, \
       as well as other code written by third parties. Additional details regarding \
       these and other third party code included in this product, including \
       applicable copyright, legal and licensing notices, are available in the \
       /licenses directory for this product.

launch=Run with Clover
launch.group.label=Run With Clover
launch.group.title=Run With Clover
launch.actionset.label=Clover
launch.eclipse.label=Eclipse Application
launch.java.application.label=Java Application
launch.java.applet.label=Java Applet
launch.junit.label=JUnit Test
launch.junit.plugin.label=JUnit Plug-In Test
launch.popup.group.label=Run With Clover As
launch.testng.label=TestNG Test
launch.menu.run.label=Run

launch.toolbar.label=Run With Clover
launch.toolbar.open.label=Open Run With Clover Dialog...
launch.toolbar.run.as.label=Run With Clover As
launch.toolbar.run.history.label=Run with Clover History 
launch.toolbar.last.clovered.name=Run With Clover

launch.commands.last.clovered.name=Run With Clover
launch.commands.last.clovered.description=Run With Clover Support Enabled
launch.commands.open.clover.configuration.name=Open Run With Clover Dialog...
launch.commands.open.clover.configuration.description=Open a dialog to launch applications with Clover runtime support enabled
launch.commands.local.java.application.shortcut.name=Launch as Java Application With Clover support
launch.commands.local.java.application.shortcut.description=Run a Java application with Clover runtime support enabled
launch.commands.local.java.applet.shortcut.name=Launch as Java Applet With Clover support
launch.commands.local.java.applet.shortcut.description=Run a Java applket with Clover runtime support enabled
launch.commands.junit.shortcut.name=Launch as JUnit test with Clover support
launch.commands.junit.shortcut.description=Launch a JUnit test with Clover runtime support enabled
launch.commands.workbench.pde.shortcut.name=Launch as Eclipse application with Clover support
launch.commands.workbench.pde.shortcut.description=Launch an Eclipse application with Clover runtime support enabled
launch.commands.junit.pde.shortcut.name=Launch as JUnit plug-in test with Clover support
launch.commands.junit.pde.shortcut.description=Launch a JUnit plug-in test with Clover runtime support enabled

launch.tabgroups.local.java.application.description=Run a Java application with Clover runtime support.
launch.tabgroups.local.java.applet.description=Run a Java applet with Clover runtime support.
launch.tabgroups.junit.description=Create a configuration that will launch a JUnit test with Clover runtime support.
launch.tabgroups.workbench.description=Create a configuration to launch an Eclipse application with Clover runtime support.
launch.tabgroups.junit.plugin.description=Create a configuration that will launch a JUnit plug-in test with Clover runtime support.
launch.tabgroups.equinox.description=Create a configuration to launch the OSGi framework with Clover runtime support.
launch.tabgroups.testng.description=Create a configuration that will launch a TestNG test with Clover runtime support.
editor.name=Java Coverage Editor
perspective.name=Clover Coverage
project.removenature=Disable on this Project
project.addnature=Enable on this Project
project.togglenatures.short=Enable/Disable on...
project.togglenatures.long=Enable/Disable Clover on...
project.togglenaturestooltip=Enable or disable Clover on one or more project
project.configure=Configure...
project.refreshcoverage=Refresh Coverage Data
project.refreshcoveragetooltip=Reload the coverage recording data for the selected project
project.clearcoverage=Delete Coverage Recordings
project.clearcoveragetooltip=Delete the coverage recording data on disk for the selected project
project.compilewithclover=Compiled with Clover
project.compilewithclovertooltip=Toggle whether Clover instrumentation is performed during compilation for the selected project 
project.generatetreemap=Generate Coverage Treemap
project.generatetreemaptooltip=Generate a coverage treemap report for the selected project
project.generatecoveragecloud=Generate Coverage Cloud
project.generatecoveragecloudtooltip=Generate a coverage cloud report for the selected project
project.report=Coverage Reports
project.reporttooltip=View or generate HTML/PDF/XML coverage reports
project.generatereport=Run New Report...
project.viewreport=View Report
project.addremovefromworkingset=Add/Remove from Working Set
project.blockContext=Edit Context Filter...
project.blockContexttooltip=Edit the coverage context filter for the selected project
markers.staledb=Clover needs you to fully rebuild this project to capture all code coverage on your next test run.{0}
markers.errorloadingdb=Error loading database:\n\n{0}
markers.errorremovingdb=Please delete the Clover database {0} and rebuild your project. Clover tried deleting this file but failed.
# Labels for annotation coverage markers (General > Editors > Test Editors > Annotations)
coveragemarker.notcovered=Clover: Code not covered
coveragemarker.covered=Clover: Code covered
coveragemarker.covered.hidden=Clover: Code covered (filtered from view)
coveragemarker.covered.failed=Clover: Code covered (but only by failing tests)
coveragemarker.covered.incidental=Clover: Code covered (but not directly by test execution)
coveragemarker.covered.partialbranch=Clover: Code covered (but not for all branches)
coveragemarker.covered.testpassed=Clover: Passed tests (at least one)
coveragemarker.covered.testfailed=Clover: Failed tests (all of them)
# Labels used in Coverage Explorer view
coverageview.name=Coverage Explorer
coverageview.about=About
coverageview.hideunittests=Hide Test Classes
coverageview.hideunitteststooltip=Hide classes and files with unit tests
coverageview.hidefullycovered=Hide 100% Covered
coverageview.hidefullycoveredtooltip=Hide elements with full coverage
coverageview.hideunavailable=Hide Unavailable
coverageview.hideunavailabletooltip=Hide elements where coverage information unavailable
coverageview.toggleworkingset=Enable Clover Working Set
coverageview.toggleworkingsettooltip=Use the Clover working set to include/exclude files from instrumentation - this is useful for large projects
coverageview.editworkingset=Edit Clover Working Set...
coverageview.editworkingsettooltip=Customise all references to files of folders in the Clover Working Set
coverageview.clearworkingset=Clear Clover Working Set
coverageview.clearworkingsettooltip=Remove all references to files or folders in the Clover Working Set
coverageview.coverageineditor=Coverage in Editors
CoverageView.showPassedCoverageOnly=Include Passed Only
CoverageView.showPassedCoverageOnlyToolTip=Include coverage from passed tests only
coverageview.showallcoverageineditor=Show All
coverageview.showallcoverageineditortooltip=Shows full coverage information in open editors
coverageview.shownocoverageineditor=Show None
coverageview.shownocoverageineditortooltip=Hides coverage information in open editors
coverageview.showuncoveredcoverageineditor=Show Uncovered
coverageview.showuncoveredcoverageineditortooltip=Shows only the coverage information for uncovered code in open editors
coverageview.hierarchystylemenutitle=Layout
coverageview.hierarchystylepackagerootsstyle=Source roots
coverageview.hierarchystylepackagerootsstyletooltip=Arrange files and classes grouped by project, source roots and then by packages
coverageview.hierarchystylepackagesstyle=Packages
coverageview.hierarchystylepackagesstyletooltip=Arrange files and classes grouped by project and then by package
coverageview.hierarchystyletreetoggle=Hierarchical Packages
coverageview.hierarchystyletreetoggletooltip=Toggle showing packages in hierarchical list or flat list
coverageview.properties=Properties
coverageview.coverageinexplorer=Coverage in Explorer
coverageview.showtestonlycoverageinexplorer=Show Only Test Classes
coverageview.showtestonlycoverageinexplorertooltip=Show only test classes in the explorer
coverageview.showapponlycoverageinexplorer=Show Only Application Classes
coverageview.showapponlycoverageinexplorertooltip=Show only application classes in the explorer
coverageview.showallcoverageinexplorer=Show All Classes
coverageview.showallcoverageinexplorertooltip=Show test or application classes in the explorer
coverageview.columns=Columns...
coverageview.columnstooltip=Choose columns to display
coveragecloudview.name=Coverage Cloud
testcontributions.name=Test Contributions
hideinstrumentationprojectfilter.name=Internal Clover projects
hideinstrumentationprojectfilter.description=Special projects used by Clover to perform instrumentation of user projects
testrunexplorerview.name=Test Run Explorer
testrunexplorerview.flattestcasesstyle=Test Cases
testrunexplorerview.flattestcasesstyletooltip=Arrange test cases without packages or source roots
testrunexplorerview.hierarchystylepackagesstyle=Packages
testrunexplorerview.hierarchystylepackagesstyletooltip=Arrange test cases grouped by project and then package
testrunexplorerview.hierarchystylepackagerootsstyle=Source roots
testrunexplorerview.hierarchystylepackagerootsstyletooltip=Arrange test cases grouped by project, source root and then package
testrunexplorerview.columns=Columns...
testrunexplorerview.columnstooltip=Select the columns to display in this view
dashboardview.name=Clover Dashboard

ProjectPropertyPage.enableCloverCoverage=Enable Clover in this project
ProjectPropertyPage.instrumentation=Instrumentation
ProjectPropertyPage.compilation=Compilation
ProjectPropertyPage.filtering=Contexts
ProjectPropertyPage.license=License
ProjectPropertyPage.flushPolicy=Flush Policy
ProjectPropertyPage.flushPolicyExplanation=The Flush Policy controls how Clover writes coverage data to disk at runtime.\n\nFlush coverage data:
ProjectPropertyPage.directedFlush=At JVM shutdown and on special instruction
ProjectPropertyPage.intervalFlush=At set intervals:
ProjectPropertyPage.threadedFlush=At set intervals from a Clover thread:
ProjectPropertyPage.flushInterval=Every (msecs)
ProjectPropertyPage.flushPolicy.intervalMiliseconds=ms
ProjectPropertyPage.initstring=Initstring
ProjectPropertyPage.initstringBlurb=The initstring specifies where Clover should store the coverage data. Select 'Default value' to\nhave Clover manage this location for you.\n\n
ProjectPropertyPage.initstringAutomatic=Default value
ProjectPropertyPage.initstringUserSpecified=Custom value:
ProjectPropertyPage.initstringRelative=Relative to project dir
ProjectPropertyPage.fileFiltering=When choosing application && test source to instrument:
ProjectPropertyPage.fileFilteringAllFolders=Look in all source folders and apply the following Ant-style pattern sets (relative to the project root):
ProjectPropertyPage.fileFilteringInclude=Include:
ProjectPropertyPage.fileFilteringExclude=Exclude:
ProjectPropertyPage.fileFilteringSelectedFolders=Only look in these folders and apply their Ant-style pattern sets:
ProjectPropertyPage.testFolders=When looking for tests:
ProjectPropertyPage.testFoldersAll=Assume all classes matching the following Ant-style pattern set are tests or test utility classes:
ProjectPropertyPage.testFoldersSelected=Assume all source in the specified folders are tests or test utility classes:
ProjectPropertyPage.testFoldersNone=Don't look for tests, assume everything is application source (no per-test coverage will be available)
ProjectPropertyPage.contextFiltering=Coverage Contexts
ProjectPropertyPage.contextFilteringBlurb=Context filtering
ProjectPropertyPage.outputFolder.groupTitle=Output Folder
ProjectPropertyPage.outputDir=After compiling with Clover:
ProjectPropertyPage.placeInProjectDirs=Copy instrumented class files to project output dir(s).
ProjectPropertyPage.placeInUserDirs=Copy instrumented class files to a different project dir:
ProjectPropertyPage.outputFolder.folderDialog.caption=Choose a folder for the instrumented class files
ProjectPropertyPage.outputFolder.folderDialog.errorSelectWithinProject=You must select an output folder within your project
ProjectPropertyPage.outputFolder.recreateOriginalFolders=Recreate the original output folders
ProjectPropertyPage.outputFolder.recreateOriginalFolders.toolTip=If checked, instrumented packages and classes will be placed in sub folders that mimic the original output folders relative to the project root.\n\
If unchecked, instrumented packages and classes will simply be placed in the output folder.

ProjectPropertyPage.miscellaneousInstrumentationSettings=Miscellaneous
ProjectPropertyPage.qualifyJavaLang=Fully qualify instrumentation references to java.lang classes
ProjectPropertyPage.methodContextFilterInstructions=Method regular expression will match against the complete signature of methods in your source. The method signature includes all annotations, modifiers (public, static, final etc), the return type, the method name, parameter types and names, the throws clause and exceptions. Whitespace is normalised and comments are removed before matching.
ProjectPropertyPage.statementContextFilterInstructions=Statement regular expression will match against statements in your source. Whitespace is normalised and comments are removed before matching. The statement also includes the trailing semicolon.
ProjectPropertyPage.rebuildSourceTitle=Instrumentation Source Selection
ProjectPropertyPage.rebuildSourceQuestion=You have changed instrumentation source selection or test classes selection. A clean rebuild of your project is required for these changes to take effect.\nRebuild now?
ProjectPropertyPage.displayThisPromptAgain=Display this prompt again?
ProjectPropertyPage.sourceFilesTab=Source Files
ProjectPropertyPage.testClassesTab=Test Classes
ProjectPropertyPage.errorOutputFolderHasSources=The output folder for instrumented classes cannot be one of the source folders or sub-folders.
ProjectPropertyPage.errorOutputFolderHasSourcesExt=The output folder for instrumented classes cannot be one of source folders. Folder={0} Package={1}.
ProjectPropertyPage.errorUnexpectedWhileApplyProperties=An unexpected error occurred while applying the changes. See the log for details.
ProjectPropertyPage.errorCustomInitStringNotEmpty=The user-defined initstring cannot be empty.
ProjectPropertyPage.errorFlushIntervalNotPositive=The flush interval can not be negative.
ProjectPropertyPage.errorFlushIntervalNotANumber=The flush interval must be an integer.
ProjectPropertyPage.errorOutputDirNameIsNull=The custom instrumented class directory cannot be empty.
ProjectPropertyPage.errorUnexpectedWhileCustomOutputDir=An unexpected error occurred while setting custom directory for instrumented class files. See log for details.

PreferencesPage.whenRebuilding=When rebuilding the project
PreferencesPage.clearOnRebuild=Clear coverage data
PreferencesPage.leaveOnRebuild=Leave coverage data
PreferencesPage.promptOnRebuild=Ask me each time
PreferencesPage.whenContextChanges=When changing the coverage context filter for a project
PreferencesPage.rebuildOnContextChange=Rebuild the project if required
PreferencesPage.ignoreOnContextChange=Leave me to rebuild manually
PreferencesPage.promptOnContextChange=Ask me each time
PreferencesPage.whenInstrumentedSourceChanges=When changing the instrumentation source settings for a project
PreferencesPage.coverageData=Coverage visualization should
PreferencesPage.autoOpenCloverViews=Automatically open Clover views when enabling Clover on a project
PreferencesPage.autoRefreshCoverageData=Refresh automatically every
PreferencesPage.twoSeconds=2s
PreferencesPage.fiveSeconds=5s
PreferencesPage.tenSeconds=10s
PreferencesPage.twentySeconds=20s
PreferencesPage.span=Span coverage before build:
PreferencesPage.spanBlurb=\
Specifies how far back data should be loaded\n\
since the last compile. E.g. '30 s', '3 days', '2 mo',\n\
'1 year' or blank or '0s' to load all coverage data.
PreferencesPage.primeAWTInUIThread=When generating reports first initialise AWT in the UI thread
PreferencesPage.miscellaneous=Miscellaneous
PreferencesPage.showExclusionAnnotations=Annotate Package Explorer icons to show source Clover exclusions
PreferencesPage.preserveInstrumentedSources=Preserve instrumented sources in temporary directory

LicensePreferencesPage.licenseSummary=Summary
LicensePreferencesPage.licenseStatus=Status:
LicensePreferencesPage.licenseStatusLicensed=Licensed
LicensePreferencesPage.licenseType=Type:
LicensePreferencesPage.licenseMessage=Message:
LicensePreferencesPage.licenseText=License Text
LicensePreferencesPage.licenseTextExplanation=Insert the contents of your Clover license below.\n{0}.
LicensePreferencesPage.licenseTextPaste=Paste
LicensePreferencesPage.licenseTextLoad=Load...
LicensePreferencesPage.licenseFileErrorTitle=Unable to load license file
LicensePreferencesPage.licenseFileErrorMessage=File {0} {1}
LicensePreferencesPage.licenseFileNotLicense=is not a Clover license.
LicensePreferencesPage.licenseFileCantRead=can't be read, isn't a file or it no longer exists.

CoverageView.elementColumn=Element
CoverageView.elementAbbreviatedColumn=Elem
CoverageView.elementColumnToolTip=The name of the Java element with code coverage
CoverageView.coverageColumn=Coverage
CoverageView.coverageColumnToolTip=The percentage of coverage
CoverageView.avgMethComplexityColumn=Avg. Meth. Complexity
CoverageView.avgMethComplexityColumnToolTip=Average Method Complexity
CoverageView.totalComplexityColumn=Total Complexity
CoverageView.totalComplexityColumnToolTip=Total Complexity
CoverageView.metricsSummaryDetails=Summary
CoverageView.loadingDecoration={0} (loading)

Contexts.blockContextFilterInstructions=\
Select any of the following Java language constructs and coding patterns to exclude when\n\
calculating coverage metrics.
Contexts.regexpContextFilterModificationInstructions=\
Define regular expressions filters to match Java statements and method definitions to exclude\n\
when calculating coverage metrics. Changes to these context filters will only take effect after\n\
a full rebuild of your project.
Contexts.regexpContextFilterSelectionInstructions=\
Select the regular expressions filters to exclude Java statements and method definitions \n\
when calculating coverage metrics.

Contexts.block.static=static initialiser blocks
Contexts.block.constructor=constructor bodies
Contexts.block.method=method bodies
Contexts.block.switch=switch statement bodies
Contexts.block.while=while statement bodies
Contexts.block.do=do-while statement bodies
Contexts.block.for=for loop bodies
Contexts.block.if=if body
Contexts.block.else=else body
Contexts.block.try=try body
Contexts.block.catch=catch body
Contexts.block.finally=finally body
Contexts.block.sync=synchronized blocks
Contexts.block.assert=assert statements
Contexts.block.@deprecated=deprecated blocks

Contexts.regex.private=private methods
Contexts.regex.property=property methods

TestRunExplorerView.testColumn=Test
TestRunExplorerView.testAbbreviatedColumn=Test
TestRunExplorerView.testColumnToolTip=The test or test container
TestRunExplorerView.startedColumn=Started
TestRunExplorerView.startedAbbreviatedColumn=Start
TestRunExplorerView.startedColumnToolTip=When the test case started
TestRunExplorerView.statusColumn=Result
TestRunExplorerView.statusAbbreviatedColumn=Rslt
TestRunExplorerView.statusColumnToolTip=The outcome of the test case
TestRunExplorerView.timeColumn=Duration
TestRunExplorerView.timeAbbreviatedColumn=Time
TestRunExplorerView.timeColumnToolTip=The length of time taken for the the test case to execute
TestRunExplorerView.messageColumn=Message
TestRunExplorerView.messageAbbreviatedColumn=Msg
TestRunExplorerView.messageColumnToolTip=Any messages generated by the test case

CloudEditor.projectRisks=Project risks
CloudEditor.packageRisks=Package risks
CloudEditor.quickWins=Quick wins
CloudEditor.showAggregateCloud=Include classes from sub-packages

OpenCloudAction.failedToGenerateCloud=Failed to generate coverage cloud
OpenCloudAction.failedToOpenCloudEditor=Error while opening coverage cloud viewer
OpenCloudAction.generatingCloudForProject=Generating coverage cloud for project "{0}"

RefreshCloudAction.refresh=Refresh
RefreshCloudAction.refreshCloud=Refresh Coverage Cloud
RefreshCloudAction.refreshCloudToolTip=Regenerate the coverage cloud based on the latest coverage information

CoverageAnnotation.covered=
CoverageAnnotation.notCovered=

CloverWorkingSet.title=Clover WorkingSet

Report.messageBoxTitle={0}
Report.successMessage=The coverage report was successfully generated. View the report with:
Report.openReportIn=View the report with:
Report.cancelMessage=The coverage report generation was cancelled.
Report.showInBrowser=Show in
Report.systemBrowser=External Web Browser
Report.eclipseBrowser=Eclipse Web Browser
Report.systemPDFViewer=External PDF Viewer
Report.systemXMLViewer=External XML Editor
Report.eclipseViewer=Eclipse {0}
Report.notLicensedTitle=Reporting not licensed
Report.notLicensed=Your license does not allow generating reports
exclude.editSettings=Edit Source Settings...
exclude.toggleShowAnnotations=Show Exclusion Annotations