<project name="eclipse_testoptimization" basedir="." default="eclipse.build">

    <import file="../com.atlassian.clover.eclipse.core/build.xml"/>

    <!--<dirname property="eclipse.base" file="${ant.file.clover-eclipse}"/>-->
    <!--<dirname property="eclipse.core.base" file="${ant.file.eclipse_core}"/>-->
    <dirname property="eclipse.testoptimization.base" file="${ant.file.eclipse_testoptimization}"/>

    <property name="eclipse.plugins.output" location="${common.base}/clover-eclipse/target/plugins"/>
    <property name="eclipse.testoptimization.output" location="${eclipse.plugins.output}/testoptimization"/>

    <property name="clover.eclipse_to.jar"
              location="${eclipse.testoptimization.output}/../org.openclover.eclipse.testopt_${eclipse.release.num}.jar"/>

    <property file="../common.properties"/>

    <target name="eclipse.init" depends="common.init">
        <mkdir dir="${eclipse.testoptimization.output}/classes"/>
        <mkdir dir="${eclipse.testoptimization.output}/anttasks/classes"/>
    </target>

	<target  name="eclipse.versions" depends="eclipse.init">
        <copy todir="${eclipse.testoptimization.output}" overwrite="true">
            <fileset dir="${eclipse.testoptimization.base}/etc" includes="plugin.xml"/>
            <filterset>
                <filterset refid="core.version.filterset"/>
                <filter token="ECLIPSE_RELEASE_NUM" value="${eclipse.release.num}"/>
            </filterset>
        </copy>
    </target>

    <target name="eclipse.build" depends="eclipse.versions">
        <fail unless="eclipse.lib.version"/>
        <propertyeval name="eclipse-xyz.home" from="eclipse-${eclipse.lib.version}.home"/>

        <path id="eclipse.libs">
            <fileset dir="${eclipse-xyz.home}" includes="**/*.jar"/>
        </path>

        <echo level="verbose" message="Target com.atlassian.clover.eclipse.testopt::eclipse.build is using [${clover-ant.jar}:${toString:eclipse.libs}:${clover-core.output.classes}:${eclipse.core.output}/classes] path"/>

        <javac destdir="${eclipse.testoptimization.output}/classes"
               debug="on"
               debuglevel="lines,vars,source"
               deprecation="on"
               target="${eclipse.jdk.target}"
               source="${eclipse.jdk.target}"
               bootclasspathref="java.rt.path"
               includeAntRuntime="false">
            <classpath>
                <path refid="eclipse.libs"/>
                <pathelement location="${clover-ant.jar}"/>
                <pathelement location="${clover-runtime.output.classes}"/>
                <pathelement location="${clover-core.output.classes}"/>
                <pathelement location="${eclipse.core.output}/classes"/>
            </classpath>
            <src path="${eclipse.testoptimization.base}/src"/>
            <exclude name="net/sf/jtreemap/**"/>
        </javac>
    </target>

    <!-- required for global testing -->
    <target name="eclipse.test"/>

    <target name="eclipse.pkg" depends="eclipse.pkgup"/>

    <target name="eclipse.pkgup" depends="eclipse.build">

        <!-- package directory -->
        <property name="eclipse.pkg.name" value="com.atlassian.clover.eclipse.testopt_${eclipse.release.num}"/>

        <mkdir dir="${eclipse.testoptimization.output}/pkg/META-INF"/>

        <copy todir="${eclipse.testoptimization.output}/pkg">
            <fileset dir="${eclipse.testoptimization.base}/etc">
                <include name="toc.xml"/>
                <include name="help.html"/>
                <include name="html/**"/>
                <include name="icons/*.gif"/>
                <include name="icons/*.png"/>
                <include name="icons/**/*.gif"/>
            </fileset>
            <!-- add third party licences from clover-core and clover-eclipse-core as well as the OpenClover license -->
            <fileset refid="clover-core.3rdparty.rights.fileset"/>
            <fileset refid="clover-core.openclover.rights.fileset"/>
            <fileset refid="clover-eclipse.3rdparty.rights.fileset"/>
        </copy>

        <copy todir="${eclipse.testoptimization.output}/pkg">
            <fileset dir="${eclipse.testoptimization.base}/etc" includes="META-INF"/>
        </copy>

        <!--<listpackages jar="${eclipse.testoptimization.output}/clover-eclipse.jar" separator=", " propertyName="eclipse.core.packages"/>-->

        <manifest file="${eclipse.testoptimization.output}/manifest.mf">
            <attribute name="Bundle-ManifestVersion" value="2"/>
            <attribute name="Bundle-Name" value="%pluginName"/>
            <attribute name="Bundle-Vendor" value="%providerName"/>
            <attribute name="Bundle-SymbolicName" value="org.openclover.eclipse.testopt; singleton:=true"/>
            <attribute name="Bundle-Version" value="${eclipse.release.num}"/>
            <attribute name="Bundle-Activator" value="com.atlassian.clover.eclipse.testopt.TestOptimizationPlugin"/>
            <attribute name="Bundle-Localization" value="plugin"/>
            <attribute name="Require-Bundle" value="org.eclipse.ui;bundle-version=&quot;${required.eclipse.version}&quot;, org.eclipse.core.runtime;bundle-version=&quot;${required.eclipse.version}&quot;, org.eclipse.ui.views, org.eclipse.jface.text, org.eclipse.ui.editors, org.eclipse.ui.workbench.texteditor, org.eclipse.jdt.launching, org.eclipse.debug.core, org.eclipse.debug.ui, org.eclipse.jdt.core, org.eclipse.jdt.ui, org.eclipse.core.resources, org.eclipse.core.filesystem, org.eclipse.jdt.debug.ui, org.eclipse.ui.ide, org.eclipse.ui.console, org.eclipse.ui.forms, org.eclipse.search, org.eclipse.jdt.junit;bundle-version=&quot;[3.4.0,4.0.0)&quot;, org.openclover.eclipse.core;bundle-version=${eclipse.release.num}"/>
            <attribute name="Bundle-Classpath" value="."/>
            <attribute name="Eclipse-LazyStart" value="true"/>
            <!--<attribute name="Export-Package" value="com.atlassian.clover.eclipse.testopt"/>-->
        </manifest>

        <copy file="${eclipse.testoptimization.output}/plugin.xml"
              tofile="${eclipse.testoptimization.output}/pkg/plugin.xml"
              overwrite="true"/>
        <copy todir="${eclipse.testoptimization.output}/pkg"
              overwrite="true">
            <fileset dir="${eclipse.testoptimization.base}/etc/l10n" includes="plugin.properties"/>
            <fileset dir="${eclipse.testoptimization.base}/etc" includes=".options"/>
        </copy>

        <jar file="${clover.eclipse_to.jar}" manifest="${eclipse.testoptimization.output}/manifest.mf">
            <fileset dir="${eclipse.testoptimization.output}/classes"/>
            <fileset dir="${eclipse.testoptimization.base}/etc/l10n" includes="com/atlassian/clover/eclipse/**/*.properties"/>
            <zipfileset dir="${eclipse.testoptimization.output}/pkg" excludes="*.jar"/>
        </jar>
    </target>

    <target name="eclipse.prod">
		 <releasepkg module="eclipse"/>
    </target>

    <target name="eclipse.clean">
        <delete dir="${eclipse.testoptimization.output}"/>
    </target>
</project>
