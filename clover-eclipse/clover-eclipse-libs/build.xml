<project name="clover-eclipse-libs" basedir="." default="clover-eclipse-libs.build">
    <import file="../../common.xml"/>

    <macrodef name="download-eclipse-from-maven">
        <attribute name="version"/>      <!-- how we will version it locally -->
        <attribute name="mavenVersion"/> <!-- what version has source artifact in maven -->
        <sequential>
            <if>
                <not>
                    <available file="${build.deps.dir}/eclipse/@{version}"/>
                </not>
                <then>
                    <echo message="Downloading clover-eclipse-libs-@{mavenVersion}-bin.zip from Maven ..."/>
                    <maven-resolve groupId="com.atlassian.clover" artifactId="clover-eclipse-libs" version="@{mavenVersion}"
                                    classifier="bin" packaging="zip"/>
                    <!-- Trick: dependency task creates property named as full artifact qualifier (but without version
                         number) containing full path to a file -->
                    <echo message="Unpacking ${com.atlassian.clover:clover-eclipse-libs:zip:bin} to ${build.deps.dir}/eclipse/@{version}/plugins ..."/>
                    <unzip src="${com.atlassian.clover:clover-eclipse-libs:zip:bin}"
                           dest="${build.deps.dir}/eclipse/@{version}/plugins"/>
                    <echo message=""/>
                </then>
            </if>
        </sequential>
    </macrodef>

    <macrodef name="download-eclipse-from-website">
        <attribute name="version"/>
        <attribute name="path"/>
        <attribute name="file"/>
        <sequential>
            <property name="eclipse.download.url"
                      value="https://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release"/>
            <if>
                <not>
                    <available file="${build.deps.dir}/eclipse/@{file}"/>
                </not>
                <then>
                    <echo message="Downloading @{file} from website ..."/>
                    <mkdir dir="${build.deps.dir}/eclipse"/>
                    <get src="${eclipse.download.url}/@{path}/@{file}"
                         dest="${build.deps.dir}/eclipse/@{file}"/>

                    <echo message="Unpacking @{file} to ${build.deps.dir}/eclipse/@{version} ..."/>
                    <unzip src="${build.deps.dir}/eclipse/@{file}"
                           dest="${build.deps.dir}/eclipse/@{version}">
                        <!-- strip "eclipse" from the unpacked path -->
                        <mapper type="regexp" from="^eclipse/(.*)" to="\1"/>
                    </unzip>
                    <echo message=""/>
                </then>
            </if>
        </sequential>

    </macrodef>

    <target name="clover-eclipse-libs.clean"/>

    <target name="-eclipse.download" depends="-eclipse.download.maven, -eclipse.download.website"/>

    <target name="-eclipse.download.maven" if="download.internal.maven.artifacts">
        <download-eclipse-from-maven version="4.4" mavenVersion="4.4.0"/>
        <download-eclipse-from-maven version="4.5" mavenVersion="4.5.1"/>
        <download-eclipse-from-maven version="4.6" mavenVersion="4.6.0"/>
    </target>

    <target name="-eclipse.download.website" unless="download.internal.maven.artifacts">
        <download-eclipse-from-website version="4.4" path="luna/SR2" file="eclipse-java-luna-SR2-win32-x86_64.zip"/>
        <download-eclipse-from-website version="4.5" path="mars/2" file="eclipse-jee-mars-2-win32-x86_64.zip"/>
        <download-eclipse-from-website version="4.6" path="neon/3" file="eclipse-java-neon-3-win32-x86_64.zip"/>
    </target>

    <target name="clover-eclipse-libs.initialize" depends="-eclipse.download"/>

    <target name="clover-eclipse-libs.build" depends="clover-eclipse-libs.initialize"/>

    <target name="clover-eclipse-libs.test.build" depends="clover-eclipse-libs.build"/>

    <target name="clover-eclipse-libs.test" depends="clover-eclipse-libs.test.build"/>

    <target name="clover-eclipse-libs.pkg" depends="clover-eclipse-libs.build"/>

    <target name="clover-eclipse-libs.publish">
        <echo message="See pom.xml how to publish new Eclipse libraries"/>
    </target>
</project>