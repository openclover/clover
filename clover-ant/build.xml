<project name="clover-ant" basedir="." default="clover-ant.jar">

    <import file="../clover-core/build.xml"/>
    <import file="../groovy/build.xml"/>

    <dirname property="clover-ant.base" file="${ant.file.clover-ant}"/>

    <property environment="env"/>
    <property name="clover-ant.output" location="${clover-ant.base}/target"/>
    <property name="clover-ant.output.classes" location="${clover-ant.output}/classes"/>
    <property name="clover-ant.output.testclasses" location="${clover-ant.output}/test-classes"/>
    <property name="clover-ant.jar" location="${clover-ant.output}/clover.jar"/>
    <property name="clover-ant-javadoc.jar" location="${clover-ant.output}/clover-javadoc.jar"/>
    <property name="clover-ant-sources.jar" location="${clover-ant.output}/clover-sources.jar"/>
    <property name="clover-ant.embedded.jar.path" value="embeddedjars/clover${core.release.base}${core.release.qualifier}"/>
    <property name="clover-ant.embedded.jar.dir" location="${clover-ant.output.classes}/${clover-ant.embedded.jar.path}"/>
    <property name="clover-ant.grover.jar" location="${clover-ant.embedded.jar.dir}/grover.jar"/>
    <property name="clover-ant.pom" location="${clover-ant.output}/pom.xml"/>
    <property name="clover-ant.pom.in" location="${clover-ant.base}/pom.xml"/>
    
    <property name="clover-ant.javadoc.api.output" value="${clover-ant.output}/javadoc/api"/>
    <property name="clover-ant.docs.site" value="ftp.openclover.org:/doc/javadoc/${core.release.num}"/>

    <path id="testng.path" path="${build.deps.dir}/testng-6.8.21.jar;${build.deps.dir}/jcommander-1.27.jar"/>

    <property name="clover.test.groovyversion.includes" value="${default.groovy1.version},${default.groovy2.version}"/>
    <property name="clover.test.groovyversion.excludes" value="${unsupported.groovy.versions}"/>
    <property name="clover.test.antversion.includes" value="${default.ant.version}"/>
    <property name="clover.test.antversion.excludes" value="${unsupported.ant.versions}"/>

    <property name="ant.install.dir" location="${user.home}"/>

    <fileset id="clover-ant.etc.fileset" dir="${clover-ant.base}/etc">
        <include name="cloverlib.xml"/>
    </fileset>

    <fileset id="clover-ant.etc.grover.fileset" dir="${clover-ant.base}/etc">
        <include name="META-INF/services/org.codehaus.groovy.transform.ASTTransformation"/>
    </fileset>

    <target name="_clover-ant.resolve-dependencies">
        <get-jar src="org/testng/testng/6.8.21/testng-6.8.21.jar" dest="testng-6.8.21.jar"/>
        <get-jar src="com/beust/jcommander/1.27/jcommander-1.27.jar" dest="jcommander-1.27.jar"/>
    </target>

    <target name="clover-ant.init" depends="common.init, clover-core.init, groovy.init, _clover-ant.resolve-dependencies">
        <path id="clover.ant.classpath">
            <fileset dir="${build.deps.dir}/ant/ant-${default.ant.version}">
                <include name="*.jar"/>
            </fileset>
        </path>

        <path id="clover-ant.buildpath">
            <path refid="clover-core.buildpath"/>
            <path refid="groovy.buildpath"/>
            <path refid="clover.ant.classpath"/>
        </path>

        <path id="clover-ant.testpath">
            <path refid="clover-ant.buildpath"/>
            <pathelement location="${clover-ant.output.classes}"/>
            <pathelement location="${clover-ant.output.testclasses}"/>
            <pathelement location="${clover-buildutil.output.classes}"/>
            <!-- Note: we have to use tools.jar from JDK we run tests against and not from java.tools.path used during
            compilation (otherwise compilation of test projects will fail due to tools.jar-rt.jar incompatibility) -->
            <pathelement location="${env.JAVA_HOME}/lib/tools.jar"/>
            <pathelement location="${clover-ant.jar}"/>
            <path refid="clover-core.testpath"/>
        </path>

        <path id="clover-ant.testpath.with.clover-repkg">
            <path refid="clover-ant.testpath"/>
            <pathelement location="${repkg.clover.jar}"/>
        </path>
    </target>

    <target name="clover-ant.build" depends="clover-core.image, groovy.build, clover-ant.init">
        <mkdir dir="${clover-ant.output.classes}"/>
        <javac srcdir="${clover-ant.base}/src/main/java"
               destdir="${clover-ant.output.classes}"
               debug="on"
               debuglevel="lines,vars,source"
               deprecation="on"
               target="${jdk.target}"
               source="${source.level}"
               bootclasspathref="java.rt.path"
               includeantruntime="false">

            <include name="**/*.java"/>
            <exclude name="**/package-info.java"/>
            <classpath refid="clover-ant.buildpath"/>
            <classpath refid="testng.path"/>
        </javac>
        <copy todir="${clover-ant.output.classes}">
            <fileset refid="clover-ant.etc.fileset"/>
            <fileset dir="${clover-ant.base}/src/main/java">
                <include name="**/*.xml"/>
            </fileset>
        </copy>
    </target>

    <target name="clover-ant.test.build" depends="clover-ant.init, clover-ant.jar, clover-core.test.build">
        <mkdir dir="${clover-ant.output.testclasses}"/>

        <groovyc
            srcdir="${clover-ant.base}/src/test/groovy"
            destdir="${clover-ant.output.testclasses}">
            <include name="**/*.groovy"/>
            <classpath refid="clover-ant.testpath"/>
            <classpath refid="testng.path"/>
        </groovyc>
        <copy todir="${clover-ant.output.testclasses}">
            <fileset dir="${clover-ant.base}/src/test/groovy">
                <include name="**/*.xml"/>
            </fileset>
        </copy>
    </target>

    <target name="debug">
        <property name="test.fork.jvm.args" value="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005"/>
    </target>

    <macrodef name="test-with">
        <attribute name="test.includes"  description="The test classes to include"/>
        <attribute name="test.excludes"  description="The test classes to exclude"/>
        <attribute name="classpath"  description="The test classpath to use"/>
        <attribute name="runtimejar" default="${repkg.clover.jar}"
                                     description="The jar to use for the system property repkg.clover.jar. It contains repackaged version of the Clover."/>
        <sequential >
            <mkdir dir="${clover-ant.output}/test/xml-report"/>

            <echo message="Running with repkg.clover.jar=@{runtimejar}"/>

            <junit fork="true" forkmode="once" dir="${clover-ant.output}" includeantruntime="false"
                   haltonerror="${fail.if.notpass}" haltonfailure="${fail.if.notpass}"
                   printsummary="true">
                <jvmarg line="${test.fork.jvm.args}"/>

                <sysproperty key="project.dir" value="${common.base}"/>
                <sysproperty key="java.awt.headless" value="true"/>
                <sysproperty key="clover.jar" value="${clover-ant.jar}"/> <!-- normal clover, used by integration tests like parameterized-junit4 -->
                <sysproperty key="repkg.clover.jar" value="@{runtimejar}"/> <!-- repackaged clover -->
                <sysproperty key="jdk.home" value="${java.home}"/> <!-- needed for bamboo and to execute javap in the tests -->
                <sysproperty key="junit.jar" value="${junit.jar}"/>
                <sysproperty key="clover.logging.level" value="${clover.logging.level}"/>
                <sysproperty key="clover.test.groovyversion.includes" value="${clover.test.groovyversion.includes}"/>
                <sysproperty key="clover.test.groovyversion.excludes" value="${clover.test.groovyversion.excludes}"/>
                <sysproperty key="clover.test.antversion.includes" value="${clover.test.antversion.includes}"/>
                <sysproperty key="clover.test.antversion.excludes" value="${clover.test.antversion.excludes}"/>

                <classpath refid="@{classpath}"/>

                <batchtest todir="${clover-ant.output}/test/xml-report">
                    <!-- scan class files rather than source files -->
                    <fileset dir="${clover-ant.output.testclasses}" includes="@{test.includes}" excludes="@{test.excludes}"/>
                    <formatter type="xml"/>
                    <formatter type="plain"/>
                </batchtest>
            </junit>
        </sequential>
    </macrodef>

    <!-- Target executes standard, basic set of test cases. In general it's recommended to run after every build -->
    <target name="clover-ant.test" depends="clover-ant.test.build">
        <test-with test.includes="${test.includes}" test.excludes="${test.excludes}" classpath="clover-ant.testpath"/>
    </target>

    <!--
        Target executes a set of functional test cases. Typically it takes much time, so in general it's recommended
        to run this target at least once before making a product release.
    -->
    <target name="clover-ant.functest" depends="clover-ant.test.build">
        <!-- Run all *FuncTest classes from the projects. Typically each of them focus on a single clover-ant target -->
        <echo message="Executing test/**/*FuncTest classes..."/>
        <test-with test.includes="${func.test.includes}" test.excludes="${func.test.excludes}"
                   classpath="clover-ant.testpath"/>
    </target>

    <target name="clover-ant.jar" depends="common.init, clover-ant.build, _clover-ant.jarup, dev.mvn.setup">
        <copy file="${clover-ant.jar}" tofile="${clover-ant.output}/clover-${ant.release.num}${core.release.suffix}.jar"/>
    </target>

    <target name="_clover-ant.jarup" depends="clover-ant.build">
        <mkdir dir="${clover-ant.embedded.jar.dir}"/>
        <!-- make grover.jar -->
        <jar file="${clover-ant.grover.jar}">
            <manifest>
               <attribute name="Specification-Title" value="Clover-Groovy-Integration"/>
               <attribute name="Specification-Version" value="${core.release.num}"/>
               <attribute name="Specification-Vendor" value="OpenClover.org"/>
               <attribute name="Implementation-Version"
                          value="${build.number.prefix}${build.number.string} ${build.date}"/>
                <attribute name="Implementation-Vendor" value="OpenClover.org"/>
            </manifest>
            <fileset refid="clover-ant.etc.grover.fileset"/>
            <fileset dir="${groovy.image.dir}">
                <include name="com/atlassian/clover/instr/groovy/**/*.class"/>
            </fileset>
        </jar>

        <!-- make clover.jar -->
        <jar file="${clover-ant.jar}">
            <manifest>
               <attribute name="Specification-Title" value="Clover"/>
               <attribute name="Specification-Version" value="${core.release.num}"/>
               <attribute name="Specification-Vendor" value="OpenClover.org"/>
               <attribute name="Implementation-Version"
                          value="${build.number.prefix}${build.number.string} ${build.date}"/>
                <attribute name="Implementation-Vendor" value="OpenClover.org"/>
            </manifest>
            <!-- add task definitions from cloverlib.xml etc -->
            <fileset refid="clover-ant.etc.fileset"/>
            <!-- add third party license files and the OpenClover license -->
            <fileset refid="clover-core.3rdparty.rights.fileset"/>
            <fileset refid="clover-core.openclover.rights.fileset"/>
            <!-- <fileset refid="clover-runtime.3rdparty.rights.fileset"/> not adding as they're also in clover-core -->
            <!-- add clover-ant classes and the grover.jar -->
            <fileset dir="${clover-ant.output.classes}">
                <include name="**/*.class"/>
                <include name="**/*.xml"/>
                <include name="${clover-ant.embedded.jar.path}/*.jar"/>
            </fileset>
            <!-- add clover-core classes -->
            <fileset dir="${clover-core.output.classes}"/>
            <!-- add clover-runtime classes (for backward compatibility) -->
            <fileset dir="${clover-runtime.output.classes}">
                <!-- exclude stripped repacked 3rd party libraries, because they're already in
                     clover-core-libs.runtime.jarset, to avoid duplicate JAR entries -->
                <exclude name="clover/**"/>
                <exclude name="org/jetbrains/annotations/**"/>
            </fileset>
            <!-- add groovy classes except grover.jar -->
            <fileset dir="${groovy.image.dir}">
                <!-- Groovy compiler classes go in grover.jar -->
                <exclude name="com/atlassian/clover/instr/groovy/**/*.class"/>
            </fileset>
            <!-- add repackaged third party libraries -->
            <!-- note: we don't pack third party libraries from clover-runtime, because:
              a) they are a subset of libraries from clover-core
              b) they are stripped -->
            <zipgroupfileset refid="clover-core-libs.runtime.jarset"/>
        </jar>
    </target>

    <target name="clover-ant.install" depends="clover-ant.jar">
        <mkdir dir="${ant.install.dir}"/>
        <copy file="${clover-ant.jar}" todir="${ant.install.dir}"/>
    </target>   

    <target name="clover-ant.pkg" depends="clover-core-libs.pkg, clover-ant.jar, clover-ant.javadoc">
        <mkdir dir="${clover-ant.output}/pkg"/>
        <mkdir dir="${clover-ant.output}/pkg/lib"/>
        <mkdir dir="${clover-ant.output}/pkg/etc"/>
        <mkdir dir="${clover-ant.output}/pkg/tutorial"/>
        <mkdir dir="${clover-ant.output}/pkg/api"/>

        <!-- actual binary -->
        <copy file="${clover-ant.jar}" todir="${clover-ant.output}/pkg/lib"/>

        <!-- release notes -->
        <copy todir="${clover-ant.output}/pkg">
            <fileset dir="${clover-ant.base}/etc/releasenotes"/>
            <filterset refid="core.version.filterset"/>
        </copy>

        <copy todir="${clover-ant.output}/pkg/resources">
            <fileset dir="${releasenotes.resources.dir}"/>
        </copy>

        <copy todir="${clover-ant.output}/pkg" file="${clover-ant.base}/etc/releasenotes/UpgradingOpenSourceLibs.txt"/>

        <!-- copy xml report XSD -->
        <copy todir="${clover-ant.output}/pkg/etc">
            <fileset dir="${common.base}/etc/schema" includes="clover.xsd"/>
        </copy>

        <!-- 3rd party rights files and the OpenClover license -->
        <copy todir="${clover-ant.output}/pkg">
            <fileset refid="clover-core.3rdparty.rights.fileset"/>
            <fileset refid="clover-core.openclover.rights.fileset"/>
        </copy>

        <!-- tutorial -->
        <copy todir="${clover-ant.output}/pkg/tutorial">
            <fileset dir="${common.base}/tutorial">
                <exclude name="build/**"/>
                <exclude name="target/**"/>
                <exclude name=".clover/**"/>
            </fileset>
        </copy>

        <!-- script and utilities for upgrading third party open-source libraries; we take them from Clover Core Libs -->
        <copy todir="${clover-ant.output}/pkg" file="${clover-core-libs.zip}"/>

        <!-- javadoc for the api and spi packages -->
        <copy todir="${clover-ant.output}/pkg/api">
            <fileset dir="${clover-ant.javadoc.api.output}"/>
        </copy>

        <zip destfile="${clover-ant.output}/clover-ant-${core.release.num}-${build.number.prefix}${build.number.string}.zip">
            <zipfileset dir="${clover-ant.output}/pkg" prefix="clover-ant-${core.release.num}" excludes="**/clover.sh"/>
            <zipfileset dir="${clover-ant.output}/pkg/tutorial/" includes="clover.sh" prefix="clover-ant-${core.release.num}/tutorial" filemode="775"/>
        </zip>
    </target>

    <target name="clover-ant.javadoc" depends="clover-ant.init"
            description="Create JavaDoc documentation for API and SPI classes">
        <javadoc destdir="${clover-ant.javadoc.api.output}"
                 encoding="iso-8859-1"
                 failonerror="yes"
                 access="public">
            <classpath>
                <path refid="clover-ant.buildpath"/>
                <pathelement location="${clover-ant.output.classes}"/>
            </classpath>
            <fileset dir="${clover-core.base}/src/main/java">
                <include name="**/api/**"/>
                <include name="**/spi/**"/>
            </fileset>
            <fileset dir="${clover-ant.base}/src/main/java">
                <include name="**/api/**"/>
                <include name="**/spi/**"/>
            </fileset>
            <fileset dir="${clover-runtime.base}/src/main/java">
                <include name="**/api/**"/>
                <include name="**/spi/**"/>
            </fileset>
        </javadoc>
    </target>

    <target name="clover-ant.javadoc.pkg"
            depends="clover-ant.javadoc"
            description="Create clover-javadoc.jar">
        <jar destfile="${clover-ant-javadoc.jar}">
            <fileset dir="${clover-ant.javadoc.api.output}"/>
        </jar>
    </target>

    <target name="clover-ant.sources.pkg"
            description="Create clover-sources.jar containing source code of API and SPI classes">
        <jar destfile="${clover-ant-sources.jar}">
            <fileset dir="${clover-core.base}/src/main/java">
                <include name="**/api/**/*.java"/>
                <include name="**/spi/**/*.java"/>
            </fileset>
            <fileset dir="${clover-ant.base}/src/main/java">
                <include name="**/api/**/*.java"/>
                <include name="**/spi/**/*.java"/>
            </fileset>
        </jar>
    </target>

    <target name="clover-ant.javadoc.deploy" depends="clover-ant.javadoc">
        <!-- scp command -->
        <property name="path.to.scp" value="scp"/>
        <!-- private key for uploading -->
        <property name="dac.upload.privatekey" value="${user.home}/clover-dac-uploads.priv"/>
        <!-- whether to use a key agent (set '-agent' value for putty) -->
        <property name="dac.upload.agent" value=""/>

        <exec executable="${path.to.scp}" dir="${clover-ant.base}" failonerror="true">
            <arg value="-r"/>                               <!-- recursive -->
            <arg value="-p"/>                               <!-- preserve file attributes -->
            <arg value="-i"/>                               <!-- ssh key -->
            <arg value="${dac.upload.privatekey}"/>
            <arg value="${dac.upload.agent}"/>              <!-- for putty -->
            <arg value="${clover-ant.javadoc.api.output}"/> <!-- from -->
            <arg value="${clover-ant.docs.site}"/>          <!-- username@host:/dir  -->
        </exec>
    </target>

    <target name="clover-ant.prod">
        <!-- call clover-ant.pkg with a build number defined and create clover-X.Y.Z.jar + clover-X.Y.Z-build-nnn.zip-->
        <releasepkg module="ant"/>
        <!-- create clover-X.Y.Z-sources.jar, clover-X.Y.Z-javadoc.jar and clover-X.Y.Z.pom -->
        <antcall target="clover-ant.javadoc.pkg"/>
        <antcall target="clover-ant.sources.pkg"/>
        <antcall target="clover-ant.prepare.pom"/>
    </target>

    <target name="clover-ant.ant.versioncheck">
        <antversion property="clover.required.ant.version" atleast="1.9.0"/>
        <fail message="Invalid Ant version. Use 1.9.0+"> <!--CLOV-1672 -->
            <condition>
                <not>
                    <isset property="clover.required.ant.version"/>
                </not>
            </condition>
        </fail>
    </target>

    <target name="clover-ant.prod.build.check" depends="prod.java16.build.check, clover-ant.ant.versioncheck"/>

    <target name="clover-ant.clean">
        <delete dir="${clover-ant.output}"/>
    </target>

    <target name="clover-ant.prepare.pom">
        <copy file="${clover-ant.pom.in}" tofile="${clover-ant.pom}">
            <filterset>
                <filter token="VERSION" value="${core.release.num}${core.release.suffix}"/>
            </filterset>
        </copy>
    </target>

    <!--
     IMPORTANT:
     1) call 'prod.mvn.setup' if you want to publish to a release repository (instead of a snapshot one)
     2) call 'clover-ant.prod' before to create artifacts; this target does not depend on clover-ant.prod directly
        in order to not build artefacts twice (because we have separate build plans for preparation and publishing)
    -->
    <target name="clover-ant.publish"
            depends="mvn.versioncheck, dev.mvn.setup, clover-ant.prepare.pom"
            description="Deploy the clover.jar, clover-javadoc.jar and clover-sources.jar to the Maven repository. ">

        <property name="clover-ant.prod.jar" location="${clover-ant.output}/clover-${ant.release.num}${core.release.suffix}.jar"/>
        <echo message="Deploying ${clover-ant.pom}, ${clover-ant.prod.jar}, ${clover-ant-javadoc.jar},
                       ${clover-ant-sources.jar} to ${maven.url}"/>
        <maven-deploy goal="${maven.deploy.goal}"
                repositoryId="${maven.repositoryId}" repositoryUrl="${maven.url}"
                pomFile="${clover-ant.pom}" file="${clover-ant.prod.jar}"
                javadocFile="${clover-ant-javadoc.jar}" sourcesFile="${clover-ant-sources.jar}"/>
    </target>

    <target name="clover-ant.mvn.install" depends="clover-ant.pkg, dev.mvn.setup, clover-ant.prepare.pom,
            clover-ant.javadoc.pkg, clover-ant.sources.pkg"
            description="Install the clover.jar, clover-javadoc.jar, clover-sources.jar into your local repository.">

        <maven-install pomFile="${clover-ant.pom}" file="${clover-ant.jar}"
                       javadocFile="${clover-ant-javadoc.jar}" sourcesFile="${clover-ant-sources.jar}"/>
    </target>

    <target name="clover-ant.repkg" depends="clover-ant.jar">

        <mkdir dir="${clover-ant.output}/jar"/>

        <property name="jar.dir" value="${clover-ant.output}/jar"/>
        <property name="jarjar.dir" value="${clover-ant.output}/jarjar"/>
        <unjar src="${clover-ant.jar}" dest="${jar.dir}"/>
        <replace dir="${jar.dir}" token="com.atlassian" value="repkg.com.atlassian">
            <include name="cloverlib.xml"/>
            <include name="com/atlassian/clover/reporters/html/source/groovy/GroovySourceTraverserImpl.egroovy"/>
            <include name="META-INF/services/org.spockframework.runtime.extension.IGlobalExtension"/>
        </replace>

        <!-- Needed so repackaged and regular Clover don't collide in some unit tests -->
        <move file="${jar.dir}/cloverlib.xml" tofile="${jar.dir}/repkgcloverlib.xml"/>

        <!-- Jarjar the internally stored grover.jar too! -->
        <property name="embedded.jar.dir" value="${jar.dir}/${clover-ant.embedded.jar.path}"/>
        <property name="repkg.embedded.jar.dir" value="${jar.dir}/repkg${clover-ant.embedded.jar.path}"/>
        <mkdir dir="${repkg.embedded.jar.dir}"/>
        <property name="groverjar.dir" value="${clover-ant.output}/grover/jar"/>
        <unjar src="${embedded.jar.dir}/grover.jar" dest="${groverjar.dir}"/>
        <replace file="${groverjar.dir}/META-INF/services/org.codehaus.groovy.transform.ASTTransformation" token="com.atlassian" value="repkg.com.atlassian"/>
        <jarjar jarfile="${repkg.embedded.jar.dir}/grover.jar">
            <fileset dir="${groverjar.dir}"/>
            <rule pattern="clover.antlr.**" result="repkg.@0"/>
            <rule pattern="com.atlassian.**" result="repkg.@0"/>
            <rule pattern="com_atlassian_**" result="repkg_@0"/>
        </jarjar>
        <delete dir="${embedded.jar.dir}" includeemptydirs="true"/>

        <jarjar jarfile="${clover-ant.jar}jar">
            <fileset dir="${jar.dir}">
                <exclude name="org/apache/log4j/**"/><!-- log4j causes jarjar to crash -->
            </fileset>
            <rule pattern="clover.antlr.**" result="repkg.@0"/>
            <rule pattern="clover.org.codehaus.groovy.antlr.**" result="repkg.@0"/>
            <rule pattern="com.atlassian.**" result="repkg.@0"/>
            <rule pattern="com_atlassian_**" result="repkg_@0"/>
        </jarjar>
        <unjar src="${clover-ant.jar}jar" dest="${jarjar.dir}"/>

        <copy todir="${jarjar.dir}">
            <fileset dir="${jar.dir}">
                <include name="org/apache/log4j/**"/>
            </fileset>
        </copy>
        <jar jarfile="${clover-ant.jar}jar" basedir="${jarjar.dir}"/>
    </target>
    
    <target name="clover-ant.repkg.install" depends="clover-ant.repkg">
        <copy tofile="${repkg.clover.jar}" file="${clover-ant.jar}jar"/> <!-- *.jarjar -->
    </target>

</project>