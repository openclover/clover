<project basedir="" default="" name="">

    <taskdef name="clover-instr" classname="com.atlassian.clover.ant.tasks.CloverInstrTask"/>
    <taskdef name="clover-instrument" classname="com.atlassian.clover.ant.tasks.CloverInstrumentTask"/>
    <taskdef name="clover-report" classname="com.atlassian.clover.ant.tasks.CloverReportTask"/>
    <taskdef name="clover-setup" classname="com.atlassian.clover.ant.tasks.CloverSetupTask"/>

    <property name="clover.jar" location="${project.dir}/clover-all/target/clover-${clover-ant.test.clover.ver}.jar"/>
    <property name="junit.jar" location="${project.dir}/tests-functional/target/test-dependencies/junit-${clover-ant.test.junit.ver}.jar"/>

    <property name="src.location" value="${project.dir}/clover-core/src/test/resources/javasyntax1.3"/>

    <path id="test.path">
        <pathelement location="${outdir}/classes"/>  <!-- compiled code for test cases -->
        <pathelement location="${junit.jar}"/>
        <pathelement location="${clover.jar}"/> <!-- normal version -->
        <pathelement location="${repkg.clover.jar}"/> <!-- repackaged version -->
    </path>

    <target name="simpleSrc">
        <clover-instr srcDir="src" destDir="instr"/>
    </target>

    <target name="simpleSrcLongName">
        <clover-instrument srcDir="src" destDir="instr"/>
    </target>

    <target name="simpleFileset">
        <clover-instr destDir="instr">
            <fileset dir="src">
                <include name="**/*.java"/>
            </fileset>
        </clover-instr>
    </target>

    <target name="simpleTestSrc">
        <clover-instr destDir="instr">
            <testsources dir="src">
                <testclass name=".*Test">
                    <testmethod returnType="void" name="test.*"/>
                </testclass>
            </testsources>
        </clover-instr>            
    </target>

    <target name="intersectingTestSrc">
        <clover-instr srcDir="src" testSrcDir="src" destDir="instr"/>
    </target>

    <target name="simpleTestFileSet">
        <clover-instr destDir="instr">
            <testSources dir="src">
                <include name="**/*Test.java"/>
            </testSources>
        </clover-instr>
    </target>

    <target name="customTestFileSet">
        <clover-instr destDir="instr">
            <testSources dir="src">
                <include name="**/*Test.java"/>
                <testclass name=".*Test">
                    <testmethod name=".*Bag.*"/> <!-- only the Bag related tests -->
                </testclass>
            </testSources>
        </clover-instr>
    </target>

    <target name="customTestFileSetBadRE">
        <clover-instr destDir="instr">
            <testSources dir="src">
                <include name="**/*Test.java"/>
                <testclass name="*Test">
                    <testmethod name=".*Bag.*"/> <!-- only the Bag related tests -->
                </testclass>
            </testSources>
        </clover-instr>
    </target>

    <target name="contextDefs">
        <clover-instr destDir="instr">
            <fileset dir="src">
                <include name="**/*.java"/>
            </fileset>
            <methodContext name="toString" regexp=".*toString.*"/>
            <statementContext name="logging" regexp="LOG\..*"/>
            <methodContext name="lowCmp" maxComplexity="3"/>
        </clover-instr>
    </target>

    <target name="errorSrcEqualsDest1">
        <clover-instr srcDir="src" destDir="src"/>
    </target>

    <target name="errorSrcEqualsDest2">
        <clover-instr destDir="src">
            <fileset dir="src"/>
        </clover-instr>
    </target>


    <target name="errorBadSrcDir">
        <clover-instr srcDir="not-there" destDir="instr"/>
    </target>

    <target name="errorMissingDestDir">
        <clover-instr srcDir="src"/>
    </target>

    <property name="relative.path" value='"\u0063\u006c\u006f\u0076\u0065\u0072\u0064\u0062\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065\u002e\u0064\u0062"'/>

    <target name="relativeTrue">

        <clover-instr srcDir="src" destDir="instr" initstring="cloverdb/relative.db" relative="true"/>
        <!-- ensure that files were instrumented with relative db locations: -->
        <condition property="relative.initstring" value="true" id="contains.relative">
            <isfileselected file="instr/moneybags/MoneyBag.java">
                <contains text="${relative.path}"/>
            </isfileselected>
        </condition>

    </target>

    <target name="relativeFalse">

        <clover-instr srcDir="src" destDir="instr" initstring="cloverdb/absolute.db"/>
        <condition property="absolute.initstring" value="true">
            <isfileselected file="instr/moneybags/MoneyBag.java">
                <contains text="${relative.path}"/>
            </isfileselected>
        </condition>
    </target>

    <target name="defaultRelativeInitString">
        <!-- default.relative.path = .clover\\clover4_ or .clover/clover4_ -->
        <property name="default.relative.path" value="\u002e\u0063\u006c\u006f\u0076\u0065\u0072${file.separator.unicodevalue}\u0063\u006c\u006f\u0076\u0065\u0072\u0034\u005f"/>
        <echo message="${default.relative.path}"/>
        <clover-instr srcDir="src" destDir="instr" relative="true"/>
        <!-- ensure that files were instrumented with relative db locations: -->
        <condition property="relative.default.initstring" value="true" id="contains.relative">
            <isfileselected file="instr/moneybags/MoneyBag.java">
                <contains text="${default.relative.path}"/>
            </isfileselected>
        </condition>
    </target>


    <target name="distributedConfiguration">
        <mkdir dir="instr"/>

        <clover-instrument destDir="instr">
            <fileset dir="src"/>
            <distributedcoverage host="myhost" port="1111" numclients="2" timeout="1000"/>            
        </clover-instrument>
        <!-- Ensure that file contains the distributed configuration -->
        <echo>${expected.dist.config}</echo>
        <condition property="distributed.configuration" value="true" >
            <isfileselected file="instr/moneybags/MoneyBag.java">
                <contains text="${expected.dist.config}"/>
            </isfileselected>
        </condition>
    </target>

    <target name="setUp">
        <mkdir dir="src"/>
        <copy todir="src">
            <fileset dir="${src.location}">
                <include name="moneybags/**"/>
            </fileset>
        </copy>
        <delete dir="cloverdb"/>
        <mkdir dir="cloverdb"/>
        <delete dir="instr"/>
    </target>

    <target name="tearDown">
    </target>

</project>