<project name="clover-core-libs" basedir="." default="core.upgrade">
    <description>
    Module contains collection of third party libraries which have been repackaged
    by adding the 'clover.' prefix to package name. This was made in order to avoid library
    version conflicts when building an application with Clover.

    This script upgrades Clover Core / Clover for Ant with the latest version of third party libraries:
        * Annotations (JetBrains)
        * Antlr
        * Cajo
        * Commons Codec
        * Commons Collections
        * Commons Lang
        * Commons Lang3
        * FastUtil
        * Gson
        * Guava
        * iText
        * JCommon
        * JDOM
        * JFreeChart
        * Log4j
        * Velocity

    How to use it:
    ==============
        1) When you extract the Clover-for-Ant (clover-ant-X.Y.Z.zip) you will find the following directory layout:
            /clover-ant-X.Y.Z
                /api
                /etc
                /extlib.zip
                    /pom.xml
                    /upgrade.xml - this script
                    /versions.xml
                /lib
                    /clover.jar  - Clover Core
                /resources
                /tutorial
                /README.html
        2) Unpack content of the extlib.zip to /extlib directory.
        3) Open /extlib/versions.xml and update version numbers of third party libraries you want to upgrade.
        4) Open /extlib/jarjar/pom.xml, comment out the 'parent' tag, run 'mvn install'. This will install jarjar:1.4
           into your local ~/.m2.
        5) Open /extlib/pom.xml and comment out the 'parent' tag. The parent pom is not available on Maven Central.
        6) Go to /extlib directory and run 'ant -f upgrade.xml'. This will download and repack all third party libraries
           as well as upgrade the /lib/clover.jar file.
    </description>

    <!-- The location of the clover.jar to be upgraded (its both source and target) -->
    <property name="clover-core.jar" value="../lib/clover.jar"/>

    <dirname property="clover-core-libs.base" file="${ant.file.clover-core-libs}"/>

    <!-- Build directories -->
    <property name="clover-core-libs.output" location="${clover-core-libs.base}/target"/>

    <!-- Import Maven tasks -->
    <get src="https://repo1.maven.org/maven2/org/apache/maven/maven-ant-tasks/2.1.3/maven-ant-tasks-2.1.3.jar"
         dest="${clover-core-libs.output}/maven-ant-tasks-2.1.3.jar" skipexisting="true" quiet="true"/>
    <typedef resource="org/apache/maven/artifact/ant/antlib.xml"
             classpath="${clover-core-libs.output}/maven-ant-tasks-2.1.3.jar"/>
    <property name="mvn.version" value="3.2.5"/>

    <!-- Import versions -->
    <import file="versions.xml"/>

    <!-- Targets for upgrading third party libraries. The 'documentation="Depends on:..."' decribes what other
        libraries are being used by given library. Note that this is not a strict dependency, i.e. you are not forced
        to upgrade dependencies too, but you could. -->

    <target name="annotations.upgrade">
        <mvn pom="clover-annotations/pom.xml" mavenversion="${mvn.version}">
            <arg value="clean"/>
            <arg value="install"/>
            <arg value="-Prepack"/>
        </mvn>
        <property name="clover.annotations.jar" value="clover-annotations/target/clover-annotations-${annotations.ver}.jar"/>
    </target>

    <target name="antlr.upgrade">
        <mvn pom="clover-antlr/pom.xml" mavenversion="${mvn.version}">
            <arg value="clean"/>
            <arg value="install"/>
            <arg value="-Prepack"/>
        </mvn>
        <property name="clover.antlr.jar" value="clover-antlr/target/clover-antlr-${antlr.ver}.jar"/>
    </target>

    <target name="cajo.upgrade">
        <!-- TODO LIBRARY IS DEAD. FIND A REPLACEMENT. -->
        <mvn pom="clover-cajo/pom.xml" mavenversion="${mvn.version}">
            <arg value="clean"/>
            <arg value="install"/>
            <arg value="-Prepack"/>
        </mvn>
        <property name="clover.cajo.jar" location="clover-cajo/target/clover-cajo-${cajo.ver}.jar"/>
    </target>

    <target name="commons-codec.upgrade">
        <mvn pom="clover-commons-codec/pom.xml" mavenversion="${mvn.version}">
            <arg value="clean"/>
            <arg value="install"/>
            <arg value="-Prepack"/>
        </mvn>
        <property name="clover.commons-codec.jar" location="clover-commons-codec/target/clover-commons-codec-${commons-codec.ver}.jar"/>
    </target>

    <target name="commons-collections.upgrade">
        <mvn pom="clover-commons-collections/pom.xml" mavenversion="${mvn.version}">
            <arg value="clean"/>
            <arg value="install"/>
            <arg value="-Prepack"/>
        </mvn>
        <property name="clover.commons-collections.jar" location="clover-commons-collections/target/clover-commons-collections-${commons-collections.ver}.jar"/>
    </target>

    <target name="commons-lang.upgrade">
        <mvn pom="clover-commons-lang/pom.xml" mavenversion="${mvn.version}">
            <arg value="clean"/>
            <arg value="install"/>
            <arg value="-Prepack"/>
        </mvn>
        <property name="clover.commons-lang.jar" location="clover-commons-lang/target/clover-commons-lang-${commons-lang.ver}.jar"/>
    </target>

    <target name="commons-lang3.upgrade">
        <mvn pom="clover-commons-lang3/pom.xml" mavenversion="${mvn.version}">
            <arg value="clean"/>
            <arg value="install"/>
            <arg value="-Prepack"/>
        </mvn>
        <property name="clover.commons-lang3.jar" location="clover-commons-lang3/target/clover-commons-lang3-${commons-lang3.ver}.jar"/>
    </target>

    <target name="fastutil.upgrade">
        <!-- TODO UPGRADE TO THE LATEST VERSION -->
        <mvn pom="clover-fastutil/pom.xml" mavenversion="${mvn.version}">
            <arg value="clean"/>
            <arg value="install"/>
            <arg value="-Prepack"/>
        </mvn>
        <property name="clover.fastutil.jar" location="clover-fastutil/target/clover-fastutil-${fastutil.ver}.jar"/>
    </target>

    <target name="gson.upgrade">
        <!-- TODO UPGRADE TO THE LATEST VERSION -->
        <mvn pom="clover-gson/pom.xml" mavenversion="${mvn.version}">
            <arg value="clean"/>
            <arg value="install"/>
            <arg value="-Prepack"/>
        </mvn>
        <property name="clover.gson.jar" location="clover-gson/target/clover-gson-${gson.ver}.jar"/>
    </target>

    <target name="guava.upgrade">
        <mvn pom="clover-guava/pom.xml" mavenversion="${mvn.version}">
            <arg value="clean"/>
            <arg value="install"/>
            <arg value="-Prepack"/>
        </mvn>
        <property name="clover.guava.jar" location="clover-guava/target/clover-guava-${guava.ver}.jar"/>
    </target>

    <target name="itext.upgrade"> <!-- depends="org.bouncycastle, com.sun.image.codec.jpeg" -->
        <!-- Do not upgrade to version newer than 2.1.7. Later versions are licensed under GPL -->
        <mvn pom="clover-itext/pom.xml" mavenversion="${mvn.version}">
            <arg value="clean"/>
            <arg value="install"/>
            <arg value="-Prepack"/>
        </mvn>
        <property name="clover.itext.jar" location="clover-itext/target/clover-itext-${itext.ver}.jar"/>
    </target>

    <target name="jcommon.upgrade">
        <mvn pom="clover-jcommon/pom.xml" mavenversion="${mvn.version}">
            <arg value="clean"/>
            <arg value="install"/>
            <arg value="-Prepack"/>
        </mvn>
        <property name="clover.jcommon.jar" location="clover-jcommon/target/clover-jcommon-${jcommon.ver}.jar"/>
    </target>

    <target name="jdom.upgrade">  <!-- depends="jaxen.upgrade" -->
        <!-- TODO UPGRADE TO org.jdom:jdom:2.0.x ? -->
        <mvn pom="clover-jdom/pom.xml" mavenversion="${mvn.version}">
            <arg value="clean"/>
            <arg value="install"/>
            <arg value="-Prepack"/>
        </mvn>
        <property name="clover.jdom.jar" location="clover-jdom/target/clover-jdom-${jdom.ver}.jar"/>
    </target>

    <target name="jfreechart.upgrade" description="Depends on: jcommon.upgrade">
        <mvn pom="clover-jfreechart/pom.xml" mavenversion="${mvn.version}">
            <arg value="clean"/>
            <arg value="install"/>
            <arg value="-Prepack"/>
        </mvn>
        <property name="clover.jfreechart.jar" location="clover-jfreechart/target/clover-jfreechart-${jfreechart.ver}.jar"/>
    </target>

    <target name="log4j.upgrade">
        <!-- TODO UPGRADE TO org.apache.logging.log4j:log4j:2.x or replace by slf4j? -->
        <mvn pom="clover-log4j/pom.xml" mavenversion="${mvn.version}">
            <arg value="clean"/>
            <arg value="install"/>
            <arg value="-Prepack"/>
        </mvn>
        <property name="clover.log4j.jar" location="clover-log4j/target/clover-log4j-${log4j.ver}.jar"/>
    </target>

    <target name="velocity.upgrade"
            description="Depends on: jdom.upgrade, commons-collections.upgrade, commons-lang.upgrade">
        <mvn pom="clover-velocity/pom.xml" mavenversion="${mvn.version}">
            <arg value="clean"/>
            <arg value="install"/>
            <arg value="-Prepack"/>
        </mvn>
        <property name="clover.velocity.jar" location="clover-velocity/target/clover-velocity-${velocity.ver}.jar"/>
    </target>

    <!-- =================================================================== -->
    <!-- Target for upgrading Clover Core -->
    <!-- =================================================================== -->

    <target name="clover-core-libs.upgrade"
            depends="annotations.upgrade, antlr.upgrade, cajo.upgrade,
                commons-codec.upgrade, commons-collections.upgrade, commons-lang.upgrade,
                commons-lang3.upgrade, jcommon.upgrade, jfreechart.upgrade,
                fastutil.upgrade, gson.upgrade, guava.upgrade, itext.upgrade, jdom.upgrade,
                log4j.upgrade, velocity.upgrade"/>

    <target name="core.upgrade" depends="clover-core-libs.upgrade">
        <property name="clover-core.backup" location="${clover-core.jar}.bak"/>
        <property name="clover-core.upgraded" location="${clover-core.jar}.upgraded"/>

        <echo message="Creating backup of Clover Core in ${clover-core.backup}"/>
        <copy file="${clover-core.jar}" tofile="${clover-core.backup}"/>

        <echo message="Creating upgraded version of Clover Core in ${clover-core.upgraded}"/>
        <jar destfile="${clover-core.upgraded}">
            <!-- Omit third-party classes from original clover.jar-->
            <zipfileset src="${clover-core.jar}">
                <exclude name="org/jetbrains/**"/>
                <exclude name="clover/antlr/**"/>
                <exclude name="clover/com/atlassian/**"/>
                <exclude name="clover/com/keypoint/**"/>
                <exclude name="clover/com/google/gson/**"/>
                <exclude name="clover/com/google/common/**"/>
                <exclude name="clover/com/lowagie/**"/>
                <exclude name="clover/gnu/cajo/**"/>
                <exclude name="clover/it/unimi/dsi/fastutil/**"/>
                <exclude name="clover/org/apache/commons/**"/>
                <exclude name="clover/org/apache/**"/>
                <exclude name="clover/org/jfree/**"/>
                <!-- <exclude name="clover/org/codehaus/**"/> from clover-for-groovy module -->
            </zipfileset>
            <!-- And add classes from new version of third party jars -->
            <zipfileset src="${clover.annotations.jar}"/>
            <zipfileset src="${clover.antlr.jar}"/>
            <zipfileset src="${clover.cajo.jar}"/>
            <zipfileset src="${clover.commons-codec.jar}"/>
            <zipfileset src="${clover.commons-collections.jar}"/>
            <zipfileset src="${clover.commons-lang.jar}"/>
            <zipfileset src="${clover.jcommon.jar}"/>
            <zipfileset src="${clover.jfreechart.jar}"/>
            <zipfileset src="${clover.fastutil.jar}"/>
            <zipfileset src="${clover.gson.jar}"/>
            <zipfileset src="${clover.guava.jar}"/>
            <zipfileset src="${clover.itext.jar}"/>
            <zipfileset src="${clover.log4j.jar}"/>
            <zipfileset src="${clover.velocity.jar}"/>
        </jar>

        <!-- Replace original jar -->
        <echo message="Renaming ${clover-core.upgraded} to ${clover-core.jar}"/>
        <delete file="${clover-core.jar}"/>
        <move file="${clover-core.upgraded}" tofile="${clover-core.jar}"/>
    </target>

</project>
